---
import Layout from '../../../layouts/Layout.astro';
import { getLangFromUrl, useTranslations, getPathWithLang } from '../../../i18n/utils';
import { languages } from '../../../i18n/utils';
import { pills, type Pill } from '../../../data/pills';

export function getStaticPaths() {
  return Object.keys(languages).flatMap(lang => {
    return pills.map(pill => ({
      params: { lang, id: pill.id }
    }));
  });
}

const { lang, id } = Astro.params;
const t = useTranslations(lang || 'en');

const pill = pills.find(p => p.id === id);
if (!pill) {
  return Astro.redirect('/404');
}

const displayName = pill.name[lang as keyof typeof pill.name] || pill.name.en;
const displayBrand = pill.brand[lang as keyof typeof pill.brand] || pill.brand.en;
const displayNotes = pill.notes?.[lang as keyof typeof pill.notes] || pill.notes?.en || '';
const displayAlternatives = pill.alternatives?.[lang as keyof typeof pill.alternatives] || pill.alternatives?.en || '';
---

<Layout title={`${displayName} | ${t('site.title')}`} description={`${t(pill.canCrush ? 'pill.safe' : 'pill.unsafe')}: ${displayName}`}>
  <main class="container mx-auto px-4 py-8">
    <div class="relative">
      <div class="absolute inset-0 -z-10 transform-gpu overflow-hidden blur-3xl">
        <div class="relative left-[calc(50%-11rem)] aspect-[1155/678] w-[36.125rem] -translate-x-1/2 rotate-[30deg] bg-gradient-to-tr from-primary to-secondary opacity-20 sm:left-[calc(50%-30rem)] sm:w-[72.1875rem]" style="clip-path: polygon(74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0.1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17.9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%)"></div>
      </div>
      <div class="relative">
        <div class="max-w-3xl mx-auto">
          <div class="mb-8">
            <a href={getPathWithLang('', lang)} class="inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2 shadow-sm hover:shadow-md">
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-4 w-4 mr-2">
                <path d="m12 19-7-7 7-7"></path>
                <path d="M19 12H5"></path>
              </svg>
              {t('nav.back')}
            </a>
          </div>
          
          <div class="p-6 rounded-lg bg-card shadow-md mb-8">
            <div class="flex flex-col md:flex-row gap-6 items-center md:items-start">
              <div class="w-32 h-32 flex-shrink-0">
                <img src={pill.image} alt={displayName} class="w-full h-full object-cover rounded-lg shadow-md" />
              </div>
              <div class="flex-grow text-center md:text-left">
                <div class="mb-2">
                  <span class="text-sm text-muted-foreground font-medium">{t('pill.active_ingredient')}:</span>
                  <h1 class="text-3xl font-bold">{displayName}</h1>
                </div>
                <div class="mb-4">
                  <span class="text-sm text-muted-foreground font-medium">{t('pill.brand_name')}:</span>
                  <p class="text-xl text-muted-foreground">{displayBrand}</p>
                </div>
                <div class="mb-4">
                  {pill.canCrush ? (
                    <span class="inline-flex items-center px-4 py-2 rounded-full text-sm font-medium bg-green-100 text-green-800">
                      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-5 w-5 mr-2">
                        <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
                        <polyline points="22 4 12 14.01 9 11.01"></polyline>
                      </svg>
                      {t('pill.safe')}
                    </span>
                  ) : (
                    <span class="inline-flex items-center px-4 py-2 rounded-full text-sm font-medium bg-destructive text-destructive-foreground">
                      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-5 w-5 mr-2">
                        <circle cx="12" cy="12" r="10"></circle>
                        <line x1="15" y1="9" x2="9" y2="15"></line>
                        <line x1="9" y1="9" x2="15" y2="15"></line>
                      </svg>
                      {t('pill.unsafe')}
                    </span>
                  )}
                </div>
              </div>
            </div>
          </div>
          
          {displayNotes && (
            <div class="p-6 rounded-lg bg-card shadow-md mb-6">
              <h2 class="text-xl font-semibold mb-3 text-primary">{t('pill.notes')}</h2>
              <p>{displayNotes}</p>
            </div>
          )}
          
          {displayAlternatives && (
            <div class="p-6 rounded-lg bg-card shadow-md mb-6">
              <h2 class="text-xl font-semibold mb-3 text-primary">{t('pill.alternatives')}</h2>
              <p>{displayAlternatives}</p>
            </div>
          )}
          
          <div class="p-6 rounded-lg bg-gradient-to-r from-destructive/10 to-destructive/5 shadow-md mb-8">
            <p class="text-center text-destructive font-medium">{t('about.warning')}</p>
          </div>
        </div>
      </div>
    </div>
  </main>
</Layout> 