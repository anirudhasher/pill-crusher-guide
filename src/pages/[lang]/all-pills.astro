---
import Layout from '../../layouts/Layout.astro';
import { getLangFromUrl, useTranslations, getPathWithLang } from '../../i18n/utils';
import { languages } from '../../i18n/utils';
import { pills, type Pill } from '../../data/pills';

export function getStaticPaths() {
  return Object.keys(languages).map(lang => {
    // Calculate total number of pages
    const totalPills = pills.length;
    const pillsPerPage = 10;
    const totalPages = Math.ceil(totalPills / pillsPerPage);
    
    return {
      params: { lang },
      props: { 
        page: 1,
        totalPages,
        paginatedPills: pills.slice(0, pillsPerPage)
      }
    };
  });
}

const { lang } = Astro.params;
const { page, totalPages, paginatedPills } = Astro.props;
const t = useTranslations(lang || 'en');
const currentPage = 1;
---

<Layout title={`${t('all.pills')} | ${t('site.title')}`} description={t('site.description')}>
  <main class="container mx-auto px-4 py-8">
    <div class="relative">
      <div class="absolute inset-0 -z-10 transform-gpu overflow-hidden blur-3xl">
        <div class="relative left-[calc(50%-11rem)] aspect-[1155/678] w-[36.125rem] -translate-x-1/2 rotate-[30deg] bg-gradient-to-tr from-primary to-secondary opacity-20 sm:left-[calc(50%-30rem)] sm:w-[72.1875rem]" style="clip-path: polygon(74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0.1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17.9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%)"></div>
      </div>
      <div class="relative">
        <div class="text-center mb-12">
          <h1 class="text-4xl font-bold tracking-tight sm:text-5xl mb-4 bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent drop-shadow-sm">
            {t('all.pills')}
          </h1>
          <p class="text-lg text-muted-foreground max-w-2xl mx-auto">
            {t('site.description')}
          </p>
        </div>
        
        <div class="space-y-6">
          {paginatedPills.map((pill: Pill) => {
            const displayName = pill.name[lang as keyof typeof pill.name] || pill.name.en;
            const displayBrand = pill.brand[lang as keyof typeof pill.brand] || pill.brand.en;
            const displayNotes = pill.notes?.[lang as keyof typeof pill.notes] || pill.notes?.en || '';
            
            return (
              <div class="p-6 rounded-lg bg-card shadow-md hover:shadow-lg transition-shadow duration-300 border border-border/50">
                <div class="flex flex-col md:flex-row gap-6 items-center md:items-start">
                  <div class="w-24 h-24 flex-shrink-0">
                    <div class={`w-full h-full rounded-lg flex items-center justify-center text-white font-bold ${pill.canCrush ? 'bg-green-500' : 'bg-red-500'}`}>
                      {pill.canCrush ? 'SAFE' : 'NO'}
                    </div>
                  </div>
                  <div class="flex-grow text-center md:text-left">
                    <div class="mb-2">
                      <span class="text-xs text-muted-foreground">{t('pill.active_ingredient')}:</span>
                      <h2 class="text-lg font-semibold">{displayName}</h2>
                    </div>
                    <div class="mb-4">
                      <span class="text-xs text-muted-foreground">{t('pill.brand_name')}:</span>
                      <p class="text-sm text-muted-foreground">{displayBrand}</p>
                    </div>
                    <div class="mb-4">
                      {pill.canCrush ? (
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800">
                          {t('pill.safe')}
                        </span>
                      ) : (
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-destructive text-destructive-foreground">
                          {t('pill.unsafe')}
                        </span>
                      )}
                    </div>
                    {displayNotes && (
                      <div class="mb-4">
                        <span class="text-sm text-muted-foreground font-medium">{t('pill.notes')}:</span>
                        <p class="text-sm">{displayNotes}</p>
                      </div>
                    )}
                    <div>
                      <a href={`/${lang}/pill/${pill.id}`} class="inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-9 px-4 py-2 shadow-md hover:shadow-lg">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-4 w-4 mr-2">
                          <path d="M15 2H9a1 1 0 0 0-1 1v2c0 .6.4 1 1 1h6c.6 0 1-.4 1-1V3c0-.6-.4-1-1-1Z"></path>
                          <path d="M8 4H6a1 1 0 0 0-1 1v15a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-2"></path>
                          <path d="M8 10h8"></path>
                          <path d="M8 14h8"></path>
                          <path d="M8 18h8"></path>
                        </svg>
                        View Details
                      </a>
                    </div>
                  </div>
                </div>
              </div>
            );
          })}
        </div>
        
        <!-- Pagination -->
        {totalPages > 1 && (
          <div class="mt-8">
            <nav class="mx-auto flex w-full justify-center" aria-label="pagination">
              <div class="flex flex-1 items-center justify-center">
                <div class="flex items-center space-x-6">
                  <span 
                    class="inline-flex h-10 items-center justify-center rounded-md border border-input bg-background px-4 py-2 text-sm font-medium text-muted-foreground ring-offset-background transition-colors hover:bg-accent hover:text-accent-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 cursor-not-allowed"
                    aria-disabled="true"
                  >
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-4 w-4 mr-2">
                      <path d="m15 18-6-6 6-6"></path>
                    </svg>
                    {t('pagination.previous')}
                  </span>
                  
                  <div class="flex items-center">
                    {Array.from({ length: Math.min(totalPages, 5) }, (_, i) => i + 1).map((pageNum) => (
                      <a
                        href={pageNum === 1 ? `/${lang}/all-pills` : `/${lang}/all-pills/${pageNum}`}
                        class={`inline-flex h-10 w-10 items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 ${pageNum === currentPage ? 'bg-primary text-primary-foreground' : 'border border-input bg-background hover:bg-accent hover:text-accent-foreground'}`}
                        aria-current={pageNum === currentPage ? "page" : undefined}
                      >
                        {pageNum}
                      </a>
                    ))}
                    
                    {totalPages > 5 && (
                      <>
                        <span class="flex h-10 w-10 items-center justify-center">...</span>
                        <a
                          href={`/${lang}/all-pills/${totalPages}`}
                          class="inline-flex h-10 w-10 items-center justify-center rounded-md border border-input bg-background text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2"
                        >
                          {totalPages}
                        </a>
                      </>
                    )}
                  </div>
                  
                  <a 
                    href={`/${lang}/all-pills/2`}
                    class="inline-flex h-10 items-center justify-center rounded-md border border-input bg-background px-4 py-2 text-sm font-medium ring-offset-background transition-colors hover:bg-accent hover:text-accent-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2"
                  >
                    {t('pagination.next')}
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-4 w-4 ml-2">
                      <path d="m9 18 6-6-6-6"></path>
                    </svg>
                  </a>
                </div>
              </div>
            </nav>
          </div>
        )}
        
        <div class="mt-16 p-6 rounded-lg bg-gradient-to-r from-destructive/10 to-destructive/5 shadow-md">
          <p class="text-center text-destructive font-medium">{t('about.warning')}</p>
        </div>
      </div>
    </div>
  </main>
</Layout> 